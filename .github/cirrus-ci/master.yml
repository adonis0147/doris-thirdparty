macos_instance:
  image: ghcr.io/cirruslabs/macos-sonoma-base:latest

task:
  timeout_in: 120m
  script: |
    pushd "$(brew --repo)"
    git fetch
    git reset --hard origin/master
    brew update
    popd

    brew install automake autoconf libtool pkg-config texinfo coreutils gnu-getopt python@3 \
      cmake ninja ccache bison byacc gettext wget pcre llvm@16 openjdk@11 maven node m4
    export PATH="$(brew --prefix)/opt/m4/bin:${PATH}"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source "${HOME}/.cargo/env"

    git clone --depth=1 https://github.com/apache/doris
    cd doris
    rm -rf docker pytest fe docs regression-test

    cd thirdparty

    sed '/${command}/a \
            names=$(sed -n "/${command}()/,/^}/p" "${DORIS_THIRDPARTY}/build-thirdparty.sh" | \
              sed -n "/check_if_source_exist/ s/.*\\"\\${\\(.*\\)}\\"/\\1/p") \
            read -r -a source_names <<<"${names//$'"'\\\n'"'/ }" \
            for source_name in "${source_names[@]}"; do \
              download_name="${source_name%_SOURCE}_NAME" \
              if ! [[ "${!source_name}" =~ boost_* ]] && ! [[ "${!source_name}" =~ jemalloc-* ]]; then \
                rm -rf "${TP_SOURCE_DIR}/${!source_name}" \
              fi \
              if ! [[ "${!download_name}" =~ jemalloc-* ]]; then \
                rm -rf "${TP_SOURCE_DIR}/${!download_name}" \
              fi \
            done
    ' build-thirdparty.sh >build-thirdparty.sh.bak
    mv build-thirdparty.sh.bak build-thirdparty.sh

    export MACOSX_DEPLOYMENT_TARGET=12.0
    bash build-thirdparty.sh -j "$(nproc)"
    rm -rf src

    kernel="$(uname -s | awk '{print tolower($0)}')"
    arch="$(uname -m)"
    tar -cf - installed | xz -z -T0 - >"doris-thirdparty-prebuilt-${kernel}-${arch}.tar.xz"

  artifacts:
    path: doris/thirdparty/doris-thirdparty-prebuilt-*.tar.xz
